#!/bin/bash

CONTAINER="swoole_app"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|log} [--clear-logs|-cl]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER"
    echo "  stop       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER"
    echo "  restart    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER"
    echo "  log        - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --clear-logs, -cl  - –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start"
    echo "  $0 restart --clear-logs"
    echo "  $0 restart -cl"
    echo "  $0 stop --clear-logs"
    echo "  $0 log"
    echo "  $0 log -cl"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
get_container_id() {
    CID=$(docker inspect --format='{{.Id}}' $CONTAINER 2>/dev/null)
    if [ -z "$CID" ]; then
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clear_logs() {
    echo "üßπ –û—á–∏—â–∞—é –ª–æ–≥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER..."
    sudo truncate -s 0 /var/lib/docker/containers/$CID/$CID-json.log
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
start_container() {
    echo "üîÑ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER..."
    if docker start $CONTAINER > /dev/null; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
        echo "üìú –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER:"
        docker logs -f $CONTAINER
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
stop_container() {
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER..."
    if docker stop $CONTAINER > /dev/null; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
restart_container() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER..."
    if docker restart $CONTAINER > /dev/null; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        echo "üìú –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER:"
        docker logs -f $CONTAINER
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo "üìú –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER:"
    docker logs -f $CONTAINER
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    show_help
    exit 1
fi

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
ACTION=""
CLEAR_LOGS=false

for arg in "$@"; do
    case $arg in
        start|stop|restart|log)
            if [ -n "$ACTION" ]; then
                echo "‚ùå –û—à–∏–±–∫–∞: –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É"
                show_help
                exit 1
            fi
            ACTION="$arg"
            ;;
        --clear-logs|-cl)
            CLEAR_LOGS=true
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $arg"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥—ã
if [ -z "$ACTION" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞"
    show_help
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
get_container_id

# –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if [ "$CLEAR_LOGS" = true ]; then
    clear_logs
fi

# –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
case $ACTION in
    start)
        start_container
        ;;
    stop)
        stop_container
        ;;
    restart)
        restart_container
        ;;
    log)
        show_logs
        ;;
esac
